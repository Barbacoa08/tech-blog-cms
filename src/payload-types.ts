/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    icon: Icon;
    posts: Post;
    'tech-posts': TechPost;
    tags: Tag;
    topics: Topic;
    users: User;
    program: Program;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface Icon {
  id: string;
  name: string;
  value: string;
}
export interface Post {
  id: string;
  title: string;
  slug?: string;
  author?: string | User;
  publishedDate?: string;
  tags?: string[] | Tag[];
  content: {
    [k: string]: unknown;
  }[];
  accordions?: {
    accordionheader: string;
    accordionItems?: {
      accordionitemheader?: string;
      accordionitemcontent: {
        [k: string]: unknown;
      }[];
      id?: string;
    }[];
    id?: string;
  }[];
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  name: string;
  roles?: ('admin' | 'editor')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Tag {
  id: string;
  name: string;
}
export interface TechPost {
  id: string;
  title: string;
  slug?: string;
  author?: string | User;
  publishedDate?: string;
  tags?: string[] | Tag[];
  content: {
    [k: string]: unknown;
  }[];
  accordions?: {
    accordionheader: string;
    accordionItems?: {
      accordionitemheader?: string;
      accordionitemcontent: {
        [k: string]: unknown;
      }[];
      id?: string;
    }[];
    id?: string;
  }[];
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface Topic {
  id: string;
  title: string;
  slug?: string;
  icon?: string | Icon;
  tags: string[] | Tag[];
  content: {
    [k: string]: unknown;
  }[];
  accordions?: {
    accordionheader: string;
    accordionItems?: {
      accordionitemheader?: string;
      accordionitemcontent: {
        [k: string]: unknown;
      }[];
      id?: string;
    }[];
    id?: string;
  }[];
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface Program {
  id: string;
  slug?: string;
  title: string;
  passcode: string;
  content?: {
    [k: string]: unknown;
  }[];
  accordions?: {
    accordionheader: string;
    accordionItems?: {
      accordionitemheader?: string;
      accordionitemcontent: {
        [k: string]: unknown;
      }[];
      id?: string;
    }[];
    id?: string;
  }[];
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string;
  batch?: number;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes {
    collections: {
      'icon': Icon
      'posts': Post
      'tech-posts': TechPost
      'tags': Tag
      'topics': Topic
      'users': User
      'program': Program
      'payload-preferences': PayloadPreference
      'payload-migrations': PayloadMigration
    }

  }
}